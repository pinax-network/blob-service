definitions:
  controllers.VersionResponse:
    properties:
      commit:
        type: string
      enabled_features:
        items:
          type: string
        type: array
      version:
        type: string
    type: object
  dto.Blob:
    properties:
      blob:
        items:
          type: integer
        type: array
      extra:
        $ref: '#/definitions/dto.Extra'
      index:
        type: integer
      kzg_commitment:
        items:
          type: integer
        type: array
      kzg_commitment_inclusion_proof:
        items:
          items:
            type: integer
          type: array
        type: array
      kzg_proof:
        items:
          type: integer
        type: array
      signed_block_header:
        $ref: '#/definitions/dto.SignedBlockHeader'
    type: object
  dto.Extra:
    properties:
      block_number:
        type: integer
      root:
        items:
          type: integer
        type: array
      timestamp:
        $ref: '#/definitions/dto.Timestamp'
    type: object
  dto.Message:
    properties:
      body_root:
        items:
          type: integer
        type: array
      parent_root:
        items:
          type: integer
        type: array
      proposer_index:
        type: integer
      slot:
        type: integer
      state_root:
        items:
          type: integer
        type: array
    type: object
  dto.SignedBlockHeader:
    properties:
      message:
        $ref: '#/definitions/dto.Message'
      signature:
        items:
          type: integer
        type: array
    type: object
  dto.Timestamp:
    properties:
      nanos:
        type: integer
      seconds:
        type: integer
    type: object
  response.ApiDataResponse:
    properties:
      data: {}
      meta: {}
    type: object
  response.ApiError:
    properties:
      code:
        type: string
      detail:
        type: string
      status:
        type: integer
    type: object
  response.ApiErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/response.ApiError'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API for Ethereum Blobs.
  title: Ethereum Consensus Layer Blobs REST API
  version: "1.0"
paths:
  /eth/v1/beacon/blob_sidecars/{block_id}:
    get:
      parameters:
      - description: 'Block identifier. Can be one of: '
        in: path
        name: block_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            allOf:
            - $ref: '#/definitions/response.ApiDataResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Blob'
                  type: array
              type: object
        "400":
          description: "invalid_block_id\"\t\"Invalid block_id"
          schema:
            $ref: '#/definitions/response.ApiErrorResponse'
        "404":
          description: "blobs_not_found\"\t\"No blobs found"
          schema:
            $ref: '#/definitions/response.ApiErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiErrorResponse'
      summary: Get Blobs by block id
      tags:
      - blobs
  /version:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.ApiDataResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.VersionResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ApiErrorResponse'
      summary: Returns the version, commit hash and enabled features of this API.
      tags:
      - version
schemes:
- http
- https
swagger: "2.0"
