# Workflow to check code and input formats and do linting using golangci-lint
name: Linting
on:
  push:
    branches: [ develop* ]
  pull_request:
    branches: [ develop*,main ]

permissions:
  contents: read
  pull-requests: read
jobs:
  golangci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: [ 1.21.x ]
        os: [ ubuntu-latest ]
    name: lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_EOSN_DEPLOY_KEY }}"
          git config --global url."git@github.com:pinax-network".insteadOf "https://github.com/pinax-network"
          git config --global url."git@github.com:pomelo-io".insteadOf "https://github.com/pomelo-io"
          git config --global url."git@github.com:eosnationftw".insteadOf "https://github.com/eosnationftw"      

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: false

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format
        run: task test:format

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        env:
          GOPRIVATE: github.com/pinax-network,github.com/eosnationftw,github.com/pomelo-io
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.56
          # Optional: golangci-lint command line arguments.
          args: --timeout=5m
          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true
